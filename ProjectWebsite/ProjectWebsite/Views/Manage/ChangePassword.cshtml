@model ProjectWebsite.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <br/>
    <div class="panel panel-primary panelStyle col-md-6 col-md-offset-3">
        <br />
        <div class="col-md-offset-4">
            <h2>Change Password</h2>
        </div>        
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="col-md-offset-2">
            <div class="form-group">
                @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change Password" class="btn btn-default" />
                    @Html.ActionLink("Back to Home", "Index", "Home", null, new { @class = "btn btn-default" })
                </div>
            </div>
            <br />
        </div>
    </div>

    <div class="row">

    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}