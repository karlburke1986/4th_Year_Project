@model ProjectWebsite.Models.PaymentViewModel

@{
    ViewBag.Title = "Payment";
}

<br />
<div class="panel panel-primary panelStyle col-md-6 col-md-offset-3">
    <div class="col-md-offset-4">
        <h2>Payment</h2>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="col-md-offset-2">           
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @{
                    if (ViewBag.Error != null)
                    {
                        @Html.Raw((string)ViewBag.Error)
                    }
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.CardHolder, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CardHolder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CardHolder, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CardNum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CardNum, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CardNum, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpiryMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            var months = new List<SelectListItem>();

                            for (int i = 1; i <= 12; i++)
                            {
                                months.Add(new SelectListItem
                                {
                                    Value = i.ToString(),
                                    Text = i.ToString()
                                });
                            }
                        }
                        @Html.DropDownListFor(model => model.ExpiryMonth, months, new { style = "font-size: 1.2em", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpiryMonth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpiryYear, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            var years = new List<SelectListItem>();

                            int now = DateTime.Now.Year;

                            for (int i = 0; i <= 10; i++)
                            {
                                years.Add(new SelectListItem
                                {
                                    Value = now.ToString(),
                                    Text = now.ToString(),
                                });

                                now++;
                            }
                        }
                        @Html.DropDownListFor(model => model.ExpiryYear, years, new { style = "font-size: 1.2em", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpiryYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cvv, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cvv, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cvv, "", new { @class = "text-danger" })
                        <a href="https://www.cvvnumber.com/cvv.html" target="_blank" style="font-size:11px">What is my CVV code?</a>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Donate €5" class="btn btn-default" />
                        @Html.ActionLink("Back to Home", "Index", "Home", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        </div>
                            }
</div>

<div class="row">

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
